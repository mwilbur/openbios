\  Welcome to detok - OpenBIOS detokenizer v1.0.2
\  (C) Copyright 2001-2006 Stefan Reinauer.
\  (C) Copyright 2006 coresystems GmbH <info@coresystems.de>
\  (C) Copyright 2005 IBM Corporation.  All Rights Reserved.
\  Written by Stefan Reinauer, <stepan@openbios.org>
\  This program is free software; you may redistribute it under the terms of
\  the GNU General Public License v2. This program has absolutely no warranty.
\  
     0: start1 ( 0x0f1 )   ( 16-bit offsets)
     1:   format:    0x08
     2:   checksum:  0xf53e (Ok)
     4:   len:       0x0349 ( 841 bytes)
     8: b(lit) ( 0x010 ) 0x40
    13: named-token ( 0x0b6 ) _local-storage-size_ 0x800
    37: b(constant) ( 0x0ba ) 
    38: _local-storage-size_ ( 0x800 ) 
    40: cells ( 0x069 ) 
    41: dup ( 0x047 ) 
    42: instance ( 0x0c0 ) 
    43: named-token ( 0x0b6 ) locals-storage 0x801
    61: b(buffer:) ( 0x0bd ) 
    62: instance ( 0x0c0 ) 
    63: named-token ( 0x0b6 ) locals-pointer 0x802
    81: b(value) ( 0x0b8 ) 
    82: named-token ( 0x0b6 ) not-enough-locals? 0x803
   104: b(:) ( 0x0b7 ) 
   105:     + ( 0x01e ) 
   106:     cells ( 0x069 ) 
   107:     locals-pointer ( 0x802 ) 
   109:     swap ( 0x049 ) 
   110:     - ( 0x01f ) 
   111:     0< ( 0x036 ) 
   112: b(;) ( 0x0c2 ) 
   113: named-token ( 0x0b6 ) .not-enough-locals 0x804
   135: b(:) ( 0x0b7 ) 
   136:     cr ( 0x092 ) 
   137:     b(") ( 0x012 ) ( len=0x34 [52 bytes] )
                    " FATAL ERROR:  Local Values Usage exceeds allocation."
   191:     type ( 0x090 ) 
   192:     cr ( 0x092 ) 
   193: b(;) ( 0x0c2 ) 
   194: named-token ( 0x0b6 ) check-enough-locals 0x805
   217: b(:) ( 0x0b7 ) 
   218:     not-enough-locals? ( 0x803 ) 
   220:     b?branch ( 0x014 ) 0x0007 (  dest = 228 )
   223:         .not-enough-locals ( 0x804 ) 
   225:         abort ( 0x216 ) 
   227:     b(>resolve) ( 0x0b2 ) 
   228: b(;) ( 0x0c2 ) 
   229: named-token ( 0x0b6 ) push-uninitted-locals 0x806
   254: b(:) ( 0x0b7 ) 
   255:     cells ( 0x069 ) 
   256:     locals-pointer ( 0x802 ) 
   258:     swap ( 0x049 ) 
   259:     - ( 0x01f ) 
   260:     b(to) ( 0x0c3 ) locals-pointer ( 0x802 ) 
   263: b(;) ( 0x0c2 ) 
   264: named-token ( 0x0b6 ) push-one-initted-local 0x807
   290: b(:) ( 0x0b7 ) 
   291:     locals-pointer ( 0x802 ) 
   293:     1 ( 0x0a6 ) 
   294:     cells ( 0x069 ) 
   295:     - ( 0x01f ) 
   296:     dup ( 0x047 ) 
   297:     b(to) ( 0x0c3 ) locals-pointer ( 0x802 ) 
   300:     locals-storage ( 0x801 ) 
   302:     + ( 0x01e ) 
   303:     ! ( 0x072 ) 
   304: b(;) ( 0x0c2 ) 
   305: named-token ( 0x0b6 ) push-initted-locals 0x808
   328: b(:) ( 0x0b7 ) 
   329:     0 ( 0x0a5 ) 
   330:     b(?do) ( 0x018 ) 0x0007 (  dest = 338 )
   333:         push-one-initted-local ( 0x807 ) 
   335:     b(loop) ( 0x015 ) 0xfffd ( =dec -3  dest = 333 )
   338: b(;) ( 0x0c2 ) 
   339: named-token ( 0x0b6 ) {push-locals} 0x809
   356: b(:) ( 0x0b7 ) 
   357:     2dup ( 0x053 ) 
   358:     check-enough-locals ( 0x805 ) 
   360:     push-uninitted-locals ( 0x806 ) 
   362:     push-initted-locals ( 0x808 ) 
   364: b(;) ( 0x0c2 ) 
   365: named-token ( 0x0b6 ) {pop-locals} 0x80a
   381: b(:) ( 0x0b7 ) 
   382:     cells ( 0x069 ) 
   383:     locals-pointer ( 0x802 ) 
   385:     + ( 0x01e ) 
   386:     b(to) ( 0x0c3 ) locals-pointer ( 0x802 ) 
   389: b(;) ( 0x0c2 ) 
   390: named-token ( 0x0b6 ) _{local} 0x80b
   402: b(:) ( 0x0b7 ) 
   403:     cells ( 0x069 ) 
   404:     locals-pointer ( 0x802 ) 
   406:     + ( 0x01e ) 
   407:     locals-storage ( 0x801 ) 
   409:     + ( 0x01e ) 
   410: b(;) ( 0x0c2 ) 
   411: named-token ( 0x0b6 ) catch 0x80c
   420: b(:) ( 0x0b7 ) 
   421:     locals-pointer ( 0x802 ) 
   423:     >r ( 0x030 ) 
   424:     catch ( 0x217 ) 
   426:     r> ( 0x031 ) 
   427:     b(to) ( 0x0c3 ) locals-pointer ( 0x802 ) 
   430: b(;) ( 0x0c2 ) 
   431: b(lit) ( 0x010 ) 0xdeaf
   436: named-token ( 0x0b6 ) dean 0x80d
   444: b(constant) ( 0x0ba ) 
   445: named-token ( 0x0b6 ) faber 0x80e
   454: b(:) ( 0x0b7 ) 
   455:     3 ( 0x0a8 ) 
   456:     2 ( 0x0a7 ) 
   457:     {push-locals} ( 0x809 ) 
   459:     2 ( 0x0a7 ) 
   460:     _{local} ( 0x80b ) 
   462:     @ ( 0x06d ) 
   463:     b(lit) ( 0x010 ) 0x28
   468:     * ( 0x020 ) 
   469:     3 ( 0x0a8 ) 
   470:     _{local} ( 0x80b ) 
   472:     ! ( 0x072 ) 
   473:     3 ( 0x0a8 ) 
   474:     _{local} ( 0x80b ) 
   476:     @ ( 0x06d ) 
   477:     alloc-mem ( 0x08b ) 
   478:     b(lit) ( 0x010 ) 0x4
   483:     _{local} ( 0x80b ) 
   485:     ! ( 0x072 ) 
   486:     1 ( 0x0a6 ) 
   487:     _{local} ( 0x80b ) 
   489:     @ ( 0x06d ) 
   490:     base ( 0x0a0 ) 
   491:     @ ( 0x06d ) 
   492:     swap ( 0x049 ) 
   493:     b(lit) ( 0x010 ) 0x10
   498:     base ( 0x0a0 ) 
   499:     ! ( 0x072 ) 
   500:     . ( 0x09d ) 
   501:     base ( 0x0a0 ) 
   502:     ! ( 0x072 ) 
   503:     type ( 0x090 ) 
   504:     0 ( 0x0a5 ) 
   505:     _{local} ( 0x80b ) 
   507:     @ ( 0x06d ) 
   508:     base ( 0x0a0 ) 
   509:     @ ( 0x06d ) 
   510:     swap ( 0x049 ) 
   511:     b(lit) ( 0x010 ) 0xa
   516:     base ( 0x0a0 ) 
   517:     ! ( 0x072 ) 
   518:     . ( 0x09d ) 
   519:     base ( 0x0a0 ) 
   520:     ! ( 0x072 ) 
   521:     type ( 0x090 ) 
   522:     b(lit) ( 0x010 ) 0x4
   527:     _{local} ( 0x80b ) 
   529:     @ ( 0x06d ) 
   530:     3 ( 0x0a8 ) 
   531:     _{local} ( 0x80b ) 
   533:     @ ( 0x06d ) 
   534:     b(lit) ( 0x010 ) 0x4
   539:     _{local} ( 0x80b ) 
   541:     @ ( 0x06d ) 
   542:     count ( 0x084 ) 
   543:     b(lit) ( 0x010 ) 0x5
   548:     {pop-locals} ( 0x80a ) 
   550: b(;) ( 0x0c2 ) 
   551: named-token ( 0x0b6 ) miracle 0x80f
   562: b(:) ( 0x0b7 ) 
   563:     3 ( 0x0a8 ) 
   564:     3 ( 0x0a8 ) 
   565:     {push-locals} ( 0x809 ) 
   567:     b(") ( 0x012 ) ( len=6 )
                    " Nyuk! "
   575:     type ( 0x090 ) 
   576:     0 ( 0x0a5 ) 
   577:     _{local} ( 0x80b ) 
   579:     @ ( 0x06d ) 
   580:     base ( 0x0a0 ) 
   581:     @ ( 0x06d ) 
   582:     swap ( 0x049 ) 
   583:     b(lit) ( 0x010 ) 0x10
   588:     base ( 0x0a0 ) 
   589:     ! ( 0x072 ) 
   590:     . ( 0x09d ) 
   591:     base ( 0x0a0 ) 
   592:     ! ( 0x072 ) 
   593:     cr ( 0x092 ) 
   594:     b(") ( 0x012 ) ( len=0xc [12 bytes] )
                    " Why, you... "
   608:     type ( 0x090 ) 
   609:     2 ( 0x0a7 ) 
   610:     _{local} ( 0x80b ) 
   612:     @ ( 0x06d ) 
   613:     base ( 0x0a0 ) 
   614:     @ ( 0x06d ) 
   615:     swap ( 0x049 ) 
   616:     b(lit) ( 0x010 ) 0xa
   621:     base ( 0x0a0 ) 
   622:     ! ( 0x072 ) 
   623:     . ( 0x09d ) 
   624:     base ( 0x0a0 ) 
   625:     ! ( 0x072 ) 
   626:     cr ( 0x092 ) 
   627:     b(") ( 0x012 ) ( len=6 )
                    " Ouch! "
   635:     type ( 0x090 ) 
   636:     1 ( 0x0a6 ) 
   637:     _{local} ( 0x80b ) 
   639:     @ ( 0x06d ) 
   640:     . ( 0x09d ) 
   641:     0 ( 0x0a5 ) 
   642:     _{local} ( 0x80b ) 
   644:     @ ( 0x06d ) 
   645:     2 ( 0x0a7 ) 
   646:     _{local} ( 0x80b ) 
   648:     @ ( 0x06d ) 
   649:     + ( 0x01e ) 
   650:     3 ( 0x0a8 ) 
   651:     _{local} ( 0x80b ) 
   653:     ! ( 0x072 ) 
   654:     1 ( 0x0a6 ) 
   655:     _{local} ( 0x80b ) 
   657:     @ ( 0x06d ) 
   658:     2 ( 0x0a7 ) 
   659:     _{local} ( 0x80b ) 
   661:     @ ( 0x06d ) 
   662:     + ( 0x01e ) 
   663:     b(lit) ( 0x010 ) 0x4
   668:     _{local} ( 0x80b ) 
   670:     ! ( 0x072 ) 
   671:     b(lit) ( 0x010 ) 0x4
   676:     _{local} ( 0x80b ) 
   678:     @ ( 0x06d ) 
   679:     0 ( 0x0a5 ) 
   680:     _{local} ( 0x80b ) 
   682:     @ ( 0x06d ) 
   683:     + ( 0x01e ) 
   684:     b(lit) ( 0x010 ) 0x5
   689:     _{local} ( 0x80b ) 
   691:     ! ( 0x072 ) 
   692:     b(lit) ( 0x010 ) 0x5
   697:     _{local} ( 0x80b ) 
   699:     @ ( 0x06d ) 
   700:     b(lit) ( 0x010 ) 0x4
   705:     _{local} ( 0x80b ) 
   707:     @ ( 0x06d ) 
   708:     b(lit) ( 0x010 ) 0x8
   713:     faber ( 0x80e ) 
   715:     type ( 0x090 ) 
   716:     free-mem ( 0x08c ) 
   717:     2 ( 0x0a7 ) 
   718:     _{local} ( 0x80b ) 
   720:     @ ( 0x06d ) 
   721:     1 ( 0x0a6 ) 
   722:     _{local} ( 0x80b ) 
   724:     @ ( 0x06d ) 
   725:     b(lit) ( 0x010 ) 0x8
   730:     faber ( 0x80e ) 
   732:     type ( 0x090 ) 
   733:     free-mem ( 0x08c ) 
   734:     0 ( 0x0a5 ) 
   735:     _{local} ( 0x80b ) 
   737:     @ ( 0x06d ) 
   738:     b(lit) ( 0x010 ) 0x4
   743:     _{local} ( 0x80b ) 
   745:     @ ( 0x06d ) 
   746:     b(lit) ( 0x010 ) 0x8
   751:     faber ( 0x80e ) 
   753:     type ( 0x090 ) 
   754:     free-mem ( 0x08c ) 
   755:     1 ( 0x0a6 ) 
   756:     _{local} ( 0x80b ) 
   758:     @ ( 0x06d ) 
   759:     3 ( 0x0a8 ) 
   760:     _{local} ( 0x80b ) 
   762:     @ ( 0x06d ) 
   763:     b(lit) ( 0x010 ) 0x6
   768:     {pop-locals} ( 0x80a ) 
   770: b(;) ( 0x0c2 ) 
   771: named-token ( 0x0b6 ) ordinary 0x810
   783: b(:) ( 0x0b7 ) 
   784:     b(lit) ( 0x010 ) 0x7b
   789:     b(lit) ( 0x010 ) 0x1c8
   794:     b(lit) ( 0x010 ) 0x315
   799:     miracle ( 0x80f ) 
   801: b(;) ( 0x0c2 ) 
   802: named-token ( 0x0b6 ) ahnold 0x811
   812: b(:) ( 0x0b7 ) 
   813:     0 ( 0x0a5 ) 
   814:     _{local} ( 0x80b ) 
   816:     @ ( 0x06d ) 
   817:     1 ( 0x0a6 ) 
   818:     _{local} ( 0x80b ) 
   820:     @ ( 0x06d ) 
   821:     + ( 0x01e ) 
   822:     dup ( 0x047 ) 
   823:     2 ( 0x0a7 ) 
   824:     _{local} ( 0x80b ) 
   826:     ! ( 0x072 ) 
   827:     2 ( 0x0a7 ) 
   828:     _{local} ( 0x80b ) 
   830:     @ ( 0x06d ) 
   831:     3 ( 0x0a8 ) 
   832:     {pop-locals} ( 0x80a ) 
   834: b(;) ( 0x0c2 ) 
   835: b(lit) ( 0x010 ) 0xbeeffece
   840: end0 ( 0x000 ) 
\  Detokenization finished normally after 841 bytes.
End of file.

