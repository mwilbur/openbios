\  Welcome to detok - OpenBIOS detokenizer v1.0.2
\  (C) Copyright 2001-2006 Stefan Reinauer.
\  (C) Copyright 2006 coresystems GmbH <info@coresystems.de>
\  (C) Copyright 2005 IBM Corporation.  All Rights Reserved.
\  Written by Stefan Reinauer, <stepan@openbios.org>
\  This program is free software; you may redistribute it under the terms of
\  the GNU General Public License v2. This program has absolutely no warranty.
\  
     0: start1 ( 0x0f1 )   ( 16-bit offsets)
     1:   format:    0x08
     2:   checksum:  0xd2f7 (Ok)
     4:   len:       0x02a0 ( 672 bytes)
     8: b(") ( 0x012 ) ( len=0xd [13 bytes] )
                " Primal errors"
    23: type ( 0x090 ) 
    24: cr ( 0x092 ) 
    25: b(lit) ( 0x010 ) 0x7f
    30: b(lit) ( 0x010 ) 0x127
    35: dup ( 0x047 ) 
    36: r> ( 0x031 ) 
    37: swap ( 0x049 ) 
    38: r@ ( 0x032 ) 
    39: -rot ( 0x04b ) 
    40: >r ( 0x030 ) 
    41: swap ( 0x049 ) 
    42: 3 ( 0x0a8 ) 
    43: 0 ( 0x0a5 ) 
    44: b(do) ( 0x017 ) 0x0006 (  dest = 51 )
    47:     r@ ( 0x032 ) 
    48: b(loop) ( 0x015 ) 0xfffe ( =dec -2  dest = 47 )
    51: 3 ( 0x0a8 ) 
    52: 0 ( 0x0a5 ) 
    53: b(do) ( 0x017 ) 0x0006 (  dest = 60 )
    56:     r> ( 0x031 ) 
    57: b(loop) ( 0x015 ) 0xfffe ( =dec -2  dest = 56 )
    60: 3 ( 0x0a8 ) 
    61: 0 ( 0x0a5 ) 
    62: b(do) ( 0x017 ) 0x0007 (  dest = 70 )
    65:     i ( 0x019 ) 
    66:     >r ( 0x030 ) 
    67: b(loop) ( 0x015 ) 0xfffd ( =dec -3  dest = 65 )
    70: named-token ( 0x0b6 ) cold-stone 0x800
    84: b(create) ( 0x0bb ) 
    85: b(lit) ( 0x010 ) 0x1c
    90: c, ( 0x0d0 ) 
    91: b(lit) ( 0x010 ) 0xec
    96: c, ( 0x0d0 ) 
    97: b(lit) ( 0x010 ) 0x9e
   102: c, ( 0x0d0 ) 
   103: b(lit) ( 0x010 ) 0xa3
   108: c, ( 0x0d0 ) 
   109: b(lit) ( 0x010 ) 0xc0
   114: c, ( 0x0d0 ) 
   115: b(lit) ( 0x010 ) 0x6e
   120: c, ( 0x0d0 ) 
   121: named-token ( 0x0b6 ) legit_one 0x801
   134: b(:) ( 0x0b7 ) 
   135:     dup ( 0x047 ) 
   136:     >r ( 0x030 ) 
   137:     3 ( 0x0a8 ) 
   138:     0 ( 0x0a5 ) 
   139:     b(do) ( 0x017 ) 0x0014 ( =dec 20  dest = 160 )
   142:         i ( 0x019 ) 
   143:         cold-stone ( 0x800 ) 
   145:         over ( 0x048 ) 
   146:         ca+ ( 0x05e ) 
   147:         c@ ( 0x071 ) 
   148:         >r ( 0x030 ) 
   149:         3 ( 0x0a8 ) 
   150:         + ( 0x01e ) 
   151:         cold-stone ( 0x800 ) 
   153:         swap ( 0x049 ) 
   154:         ca+ ( 0x05e ) 
   155:         c@ ( 0x071 ) 
   156:         r> ( 0x031 ) 
   157:     b(loop) ( 0x015 ) 0xfff0 ( =dec -16  dest = 142 )
   160:     r> ( 0x031 ) 
   161: b(;) ( 0x0c2 ) 
   162: named-token ( 0x0b6 ) tricky_one 0x802
   176: b(:) ( 0x0b7 ) 
   177:     dup ( 0x047 ) 
   178:     >r ( 0x030 ) 
   179:     over ( 0x048 ) 
   180:     b?branch ( 0x014 ) 0x0013 ( =dec 19  dest = 200 )
   183:         b(") ( 0x012 ) ( len=8 )
                        " Showing "
   193:         type ( 0x090 ) 
   194:         r> ( 0x031 ) 
   195:         u. ( 0x09b ) 
   196:         bbranch ( 0x013 ) 0x0013 ( =dec 19  dest = 216 )
   199:         b(>resolve) ( 0x0b2 ) 
   200:         r> ( 0x031 ) 
   201:         drop ( 0x046 ) 
   202:         b(") ( 0x012 ) ( len=0xa [10 bytes] )
                        " Don't show"
   214:         type ( 0x090 ) 
   215:     b(>resolve) ( 0x0b2 ) 
   216: b(;) ( 0x0c2 ) 
   217: named-token ( 0x0b6 ) another_one 0x803
   232: b(:) ( 0x0b7 ) 
   233:     >r ( 0x030 ) 
   234:     0= ( 0x034 ) 
   235:     b?branch ( 0x014 ) 0x0007 (  dest = 243 )
   238:         r> ( 0x031 ) 
   239:         drop ( 0x046 ) 
   240:         0 ( 0x0a5 ) 
   241:         exit ( 0x033 ) 
   242:     b(>resolve) ( 0x0b2 ) 
   243:     dup ( 0x047 ) 
   244:     * ( 0x020 ) 
   245:     r@ ( 0x032 ) 
   246:     / ( 0x021 ) 
   247:     r> ( 0x031 ) 
   248:     + ( 0x01e ) 
   249:     -1 ( 0x0a4 ) 
   250: b(;) ( 0x0c2 ) 
   251: b(") ( 0x012 ) ( len=0x19 [25 bytes] )
                " Now we start getting bad."
   278: type ( 0x090 ) 
   279: cr ( 0x092 ) 
   280: 0 ( 0x0a5 ) 
   281: instance ( 0x0c0 ) 
   282: named-token ( 0x0b6 ) _str 0x804
   290: b(value) ( 0x0b8 ) 
   291: 0 ( 0x0a5 ) 
   292: instance ( 0x0c0 ) 
   293: named-token ( 0x0b6 ) _len 0x805
   301: b(value) ( 0x0b8 ) 
   302: 0 ( 0x0a5 ) 
   303: instance ( 0x0c0 ) 
   304: named-token ( 0x0b6 ) _num 0x806
   312: b(value) ( 0x0b8 ) 
   313: named-token ( 0x0b6 ) parse-ints 0x807
   327: b(:) ( 0x0b7 ) 
   328:     b(to) ( 0x0c3 ) _num ( 0x806 ) 
   331:     b(to) ( 0x0c3 ) _len ( 0x805 ) 
   334:     b(to) ( 0x0c3 ) _str ( 0x804 ) 
   337:     _num ( 0x806 ) 
   339:     0 ( 0x0a5 ) 
   340:     b(?do) ( 0x018 ) 0x0029 ( =dec 41  dest = 382 )
   343:         _len ( 0x805 ) 
   345:         b?branch ( 0x014 ) 0x001e ( =dec 30  dest = 376 )
   348:             _str ( 0x804 ) 
   350:             _len ( 0x805 ) 
   352:             b(lit) ( 0x010 ) 0x2c
   357:             left-parse-string ( 0x240 ) 
   359:             2swap ( 0x055 ) 
   360:             b(to) ( 0x0c3 ) _len ( 0x805 ) 
   363:             b(to) ( 0x0c3 ) _str ( 0x804 ) 
   366:             $number ( 0x0a2 ) 
   367:             b?branch ( 0x014 ) 0x0004 (  dest = 372 )
   370:                 0 ( 0x0a5 ) 
   371:             b(>resolve) ( 0x0b2 ) 
   372:             bbranch ( 0x013 ) 0x0005 (  dest = 378 )
   375:             b(>resolve) ( 0x0b2 ) 
   376:             0 ( 0x0a5 ) 
   377:         b(>resolve) ( 0x0b2 ) 
   378:         >r ( 0x030 ) 
   379:     b(loop) ( 0x015 ) 0xffdb ( =dec -37  dest = 343 )
   382:     _num ( 0x806 ) 
   384:     0 ( 0x0a5 ) 
   385:     b(?do) ( 0x018 ) 0x0006 (  dest = 392 )
   388:         r> ( 0x031 ) 
   389:     b(loop) ( 0x015 ) 0xfffe ( =dec -2  dest = 388 )
   392: b(;) ( 0x0c2 ) 
   393: . ( 0x09d ) 
   394: b(") ( 0x012 ) ( len=0x26 [38 bytes] )
                "  If this doesn't scare you, it should:"
   434: cr ( 0x092 ) 
   435: named-token ( 0x0b6 ) scattered-errors 0x808
   455: b(:) ( 0x0b7 ) 
   456:     0 ( 0x0a5 ) 
   457:     >r ( 0x030 ) 
   458:     _num ( 0x806 ) 
   460:     0 ( 0x0a5 ) 
   461:     b(?do) ( 0x018 ) 0x0029 ( =dec 41  dest = 503 )
   464:         _str ( 0x804 ) 
   466:         _len ( 0x805 ) 
   468:         b(lit) ( 0x010 ) 0x2c
   473:         left-parse-string ( 0x240 ) 
   475:         2swap ( 0x055 ) 
   476:         b(to) ( 0x0c3 ) _len ( 0x805 ) 
   479:         b(to) ( 0x0c3 ) _str ( 0x804 ) 
   482:         $number ( 0x0a2 ) 
   483:         b?branch ( 0x014 ) 0x0007 (  dest = 491 )
   486:             0 ( 0x0a5 ) 
   487:             bbranch ( 0x013 ) 0x0009 (  dest = 497 )
   490:             b(>resolve) ( 0x0b2 ) 
   491:             r@ ( 0x032 ) 
   492:             1 ( 0x0a6 ) 
   493:             + ( 0x01e ) 
   494:             swap ( 0x049 ) 
   495:             >r ( 0x030 ) 
   496:         b(>resolve) ( 0x0b2 ) 
   497:         >r ( 0x030 ) 
   498:         i ( 0x019 ) 
   499:         u. ( 0x09b ) 
   500:     b(loop) ( 0x015 ) 0xffdb ( =dec -37  dest = 464 )
   503:     r@ ( 0x032 ) 
   504:     0 ( 0x0a5 ) 
   505:     b(?do) ( 0x018 ) 0x0008 (  dest = 514 )
   508:         r> ( 0x031 ) 
   509:         i ( 0x019 ) 
   510:         roll ( 0x04f ) 
   511:     b(loop) ( 0x015 ) 0xfffc ( =dec -4  dest = 508 )
   514: b(;) ( 0x0c2 ) 
   515: b(") ( 0x012 ) ( len=0x16 [22 bytes] )
                " Now, be very afraid..."
   539: type ( 0x090 ) 
   540: cr ( 0x092 ) 
   541: 0 ( 0x0a5 ) 
   542: instance ( 0x0c0 ) 
   543: named-token ( 0x0b6 ) where-from 0x809
   557: b(value) ( 0x0b8 ) 
   558: named-token ( 0x0b6 ) frayed-knot 0x80a
   573: b(:) ( 0x0b7 ) 
   574:     where-from ( 0x809 ) 
   576:     0= ( 0x034 ) 
   577:     b?branch ( 0x014 ) 0x0007 (  dest = 585 )
   580:         r@ ( 0x032 ) 
   581:         b(to) ( 0x0c3 ) where-from ( 0x809 ) 
   584:     b(>resolve) ( 0x0b2 ) 
   585:     r> ( 0x031 ) 
   586:     drop ( 0x046 ) 
   587:     where-from ( 0x809 ) 
   589:     b?branch ( 0x014 ) 0x0004 (  dest = 594 )
   592:         exit ( 0x033 ) 
   593:     b(>resolve) ( 0x0b2 ) 
   594:     b(") ( 0x012 ) ( len=0x11 [17 bytes] )
                    " What have I done?"
   613:     type ( 0x090 ) 
   614:     cr ( 0x092 ) 
   615: b(;) ( 0x0c2 ) 
   616: named-token ( 0x0b6 ) krellboyn 0x80b
   629: b(:) ( 0x0b7 ) 
   630:     where-from ( 0x809 ) 
   632:     ?dup ( 0x050 ) 
   633:     b?branch ( 0x014 ) 0x0008 (  dest = 642 )
   636:         >r ( 0x030 ) 
   637:         0 ( 0x0a5 ) 
   638:         b(to) ( 0x0c3 ) where-from ( 0x809 ) 
   641:     b(>resolve) ( 0x0b2 ) 
   642:     where-from ( 0x809 ) 
   644:     b?branch ( 0x014 ) 0x0004 (  dest = 649 )
   647:         exit ( 0x033 ) 
   648:     b(>resolve) ( 0x0b2 ) 
   649:     b(") ( 0x012 ) ( len=0x11 [17 bytes] )
                    " I didn't mean it!"
   668:     type ( 0x090 ) 
   669:     cr ( 0x092 ) 
   670: b(;) ( 0x0c2 ) 
   671: end0 ( 0x000 ) 
\  Detokenization finished normally after 672 bytes.
End of file.

